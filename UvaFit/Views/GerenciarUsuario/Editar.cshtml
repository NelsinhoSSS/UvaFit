@using UvaFit.Enums
@model UsuarioModel
@{
    ViewData["Title"] = "Editar Usuário";
}

<div class="text-center">


    <h1>Editar Usuário</h1>

</div>

<form asp-controller="GerenciarUsuario" asp-action="Editar" method="post">

    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label for="Nome">Nome</label>
        <input type="text" asp-for="Nome" class="form-control" placeholder="Digite o nome do usuário">
        @Html.ValidationMessageFor(x => x.Nome)
    </div>

    <div class="form-group">
        <label for="CPF">CPF</label>
        <input type="text" asp-for="CPF" class="form-control" placeholder="Digite o CPF do usuário">
        @Html.ValidationMessageFor(x => x.CPF)
    </div>

    <div class="form-group">
        <label for="E-mail">E-mail</label>
        <input type="email" asp-for="Email" class="form-control" placeholder="Digite o e-mail do usuário">
        @Html.ValidationMessageFor(x => x.Email)
    </div>

    <div class="form-group">
        <label for="Perfil">Perfil</label>
        <select asp-for="Perfil" class="form-control">
            <option value="0">Selecione</option>
            <option value="@PerfilEnum.Admin">Administrador</option>
            <option value="@PerfilEnum.Funci">Funcionário</option>
            <option value="@PerfilEnum.Aluno">Aluno</option>
        </select>
    </div>

    <div class="form-group">
        <label for="Senha">Senha</label>
        <input type="text" asp-for="Senha" class="form-control" placeholder="Digite a senha do usuário">
        @Html.ValidationMessageFor(x => x.Senha)
    </div>

    <br />

    <button type="submit" class="btn btn-success">Alterar</button>
    <a class="btn btn-secondary" asp-controller="GerenciarUsuario" asp-action="Index" role="button">Voltar</a>

</form>

<style>
    .field-validation-error {
        color: #e01d1d;
    }
</style>



